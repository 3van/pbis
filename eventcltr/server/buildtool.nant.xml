<?xml version="1.0"?>
<project>
  <target name="local.build">

    <property name="local.output" value="lwcollector" />
    <if test="${build.vsarch!='x86'}">
      <fail message="${local.output} only builds for the x86 architecture!" />
    </if>

    <if test="${build.vsarch=='x86'}">
      <choose>
        <when test="${build.debug.boolean}">
          <property name="build.cflags" value="/Od /GL /FD /EHsc /Wp64 /Zi /MD /W3" />
          <property name="build.lflags" value="/DEBUG /MACHINE:X86" />
        </when>
        <otherwise>
          <property name="build.cflags" value="/O2 /FD /EHsc /Wp64 /Zi /MD /W3" />
          <property name="build.lflags" value="/DEBUG /MACHINE:X86" />
        </otherwise>
      </choose>
    </if>

    <cl outputdir="${build.meta.current}/">
      <includedirs>
        <include name="..\..\libunistr\include"/>
        <include name="..\..\lwbase\include"/>
        <include name="..\..\lwbase\include\win32"/>
        <include name="..\include"/>
        <include name="..\common"/>
	<include name="."/>
	<include name="${build.meta.current}\..\idl"/>
      </includedirs>
      <defines>
        <define name="UNICODE"/>
        <define name="_UNICODE"/>
        <define name="WIN32"/>
        <define name="_WINDOWS"/>
        <define name="NDEBUG"/>
        <define name="_USRDLL"/>
      </defines>
      <sources>
        <include name="*.c"/>
          <include name="service/*.c"/>
          <include name="${build.meta.current}\..\idl\eventlog_s.c"/>
      </sources>
      <arg line="${build.cflags}" />
    </cl>
    <link output="${build.meta.current}/${local.output}.exe" options="Rpcrt4.lib Advapi32.lib secur32.lib shlwapi.lib shell32.lib">
      <sources basedir="${build.meta.current}/">
        <include name="*.obj"/>
	      <include name="${build.meta.current}\..\common\common.lib"/>
	      <include name="${build.meta.current}\..\..\lwbase\lwbase.lib"/>
	      <include name="${build.meta.current}\..\logging\logging.lib"/>
	      <include name="${build.meta.current}\..\..\libunistr\libunistr.lib"/>
	      <include name="${build.meta.current}\..\sqlite\sqlite.lib"/>
      </sources>
      <arg line="${build.lflags}" />
      <arg value="/PDB:${build.meta.current}/${local.output}.pdb" />
    </link>
    <exec program="mt.exe">
        <arg line='-manifest lwcollector.exe.manifest -outputresource:"${build.meta.current}/${local.output}.exe;1"' />
    </exec>
    <copy todir="${build.dist.os}">
      <fileset basedir="${build.meta.current}">
	      <include name="*.dll"/>
	      <include name="*.exe"/>
	      <include name="*.pdb"/>
      </fileset>
    </copy>
  </target>
</project>
