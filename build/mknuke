#!/bin/bash

opt_bool_to_yn()
{
    if $1 ; then
        echo "yes"
    else
        echo "no"
    fi
}

usage()
{
    local default_targets=""
    optional_append_variable default_targets ${DEFAULT_OPT_META} meta ", "
    optional_append_variable default_targets ${DEFAULT_OPT_DIST} dist ", "
    optional_append_variable default_targets ${DEFAULT_OPT_CACHE} cache ", "
    optional_append_variable default_targets ${DEFAULT_OPT_RUN} run ", "
    optional_append_variable default_targets ${DEFAULT_OPT_IMAGE} image ", "
    if [ -z "${default_targets}" ]; then
	default_targets="none"
    fi

    cat <<EOF
usage: `basename $0` [options] [target...]

    Clean build directories

  options:

    --show          Only show what would be cleaned

  targets:

    default         Remove default targets (${default_targets})
    all             Remove all (useful itself or followed by other options)
    none            Set to remove none (useful followed by other options)
    meta, nometa    Whether to remove meta directory (default: `opt_bool_to_yn ${DEFAULT_OPT_META}`)
    dist, nodist    Whether to remove dist directory (default: `opt_bool_to_yn ${DEFAULT_OPT_DIST}`)
    cache, nocache  Whether to remove cache directory (default: `opt_bool_to_yn ${DEFAULT_OPT_CACHE}`)
    run, norun      Whether to remove run directory (default: `opt_bool_to_yn ${DEFAULT_OPT_RUN}`)
    image, noimage  Whether to remove image directory (default: `opt_bool_to_yn ${DEFAULT_OPT_IMAGE}`)

EOF
    exit 1
}

[ -z "$BUILD_ROOT" ] && exit 1

source ${BUILD_ROOT}/src/linux/build/common.sh
exit_on_error $?

DEFAULT_OPT_META=true
DEFAULT_OPT_DIST=true
DEFAULT_OPT_CACHE=false
DEFAULT_OPT_RUN=true
DEFAULT_OPT_IMAGE=false

OPT_META=false
OPT_DIST=false
OPT_CACHE=false
OPT_RUN=false
OPT_IMAGE=false

OPT_SHOW=false

# Parse options
while true ; do
    case "$1" in
	--help)
	    usage
	    exit 0
	    ;;
	--show)
	    OPT_SHOW=true
	    ;;
	--*)
	    warn "Unknown option: $1"
            usage
	    ;;
        *)
            break
    esac
    shift
done

# Parse arguments

if [ -z "$1" ]; then
    warn "No targets specified."
    usage
fi

while [ -n "$1" ]; do
    case "$1" in
	default)
	    OPT_META=${DEFAULT_OPT_META}
	    OPT_DIST=${DEFAULT_OPT_DIST}
	    OPT_CACHE=${DEFAULT_OPT_CACHE}
	    OPT_RUN=${DEFAULT_OPT_RUN}
	    OPT_IMAGE=${DEFAULT_OPT_IMAGE}
	    ;;
	all)
	    OPT_META=true
	    OPT_DIST=true
	    OPT_CACHE=true
	    OPT_RUN=true
	    OPT_IMAGE=true
	    ;;
	none)
	    OPT_META=false
	    OPT_DIST=false
	    OPT_CACHE=false
	    OPT_RUN=false
	    OPT_IMAGE=false
	    ;;
	meta)
	    OPT_META=true
	    ;;
	nometa)
	    OPT_META=false
	    ;;
	dist)
	    OPT_DIST=true
	    ;;
	nodist)
	    OPT_DIST=false
	    ;;
	cache)
	    OPT_CACHE=true
	    ;;
	nocache)
	    OPT_CACHE=false
	    ;;
	run)
	    OPT_RUN=true
	    ;;
	norun)
	    OPT_RUN=false
	    ;;
	image)
	    OPT_IMAGE=true
	    ;;
	noimage)
	    OPT_IMAGE=false
	    ;;
	*)
	    warn "Unknown target: $1"
            usage
	    ;;
    esac
    shift
done

CLEAN_DIRS=""
optional_append_variable CLEAN_DIRS ${OPT_META} "${BUILD_META_ROOT}"
optional_append_variable CLEAN_DIRS ${OPT_DIST} "${BUILD_DIST_ROOT}"
optional_append_variable CLEAN_DIRS ${OPT_CACHE} "${BUILD_CACHE_ROOT}"
optional_append_variable CLEAN_DIRS ${OPT_RUN} "${BUILD_RUN_ROOT}"
optional_append_variable CLEAN_DIRS ${OPT_IMAGE} "${BUILD_IMAGE_ROOT}"

for dir in ${CLEAN_DIRS} ; do
    if ${OPT_SHOW} ; then
	echo "Would clean directory $dir"
    else
	echo "Cleaning directory $dir"
	rm -rf "${dir}"
    fi
done
