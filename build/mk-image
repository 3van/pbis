#!/bin/bash

set -e

fail()
{
    echo "$@"
    exit 1
}

read_line()
{
    _IFS="$IFS"
    IFS=""
    read -r LINE
    RES="$?"
    IFS="$_IFS"
    return "$RES"
}

rewrite_la()
{
    LA="$1"

    echo "rewriting $LA"
    . "$LA"

    set -- ${dependency_libs}
    dependency_libs="-L$(cd $(dirname $LA) && pwd)"
    for lib
    do
        case "$lib" in
            -L*)
                continue
                ;;
            *.la)
                lib="${lib##*/lib}"
                lib="${lib%.la}"
                dependency_libs="$dependency_libs -l$lib"
                ;;
            *)
                dependency_libs="$dependency_libs $lib"
                ;;
        esac
    done

    sed \
        -e "s:^installed=.*\$:installed=no:" \
        -e "s:^dependency_libs=.*\$:dependency_libs='$dependency_libs':" \
        < "$LA" > "$LA.new"
    
    mv "$LA.new" "$LA"
}

IMAGE="$1"

[ -z "$IMAGE" ] && IMAGE="../Platform.image"

if [ -z "${BUILD_MKOUT_ROOT}" ]
then
    BUILD_MKOUT_ROOT="`pwd`"
fi

if [ -n "${BUILD_DEBUG}" ]; then
    TYPE=debug
else
    TYPE=release
fi

[ -f "$BUILD_MKOUT_ROOT/$TYPE/Makefile" ] || fail "Please run from your MakeKit build directory or set BUILD_MKOUT_ROOT"

mkdir -p "$IMAGE/install"

DESTDIR=`cd "$IMAGE/install" && pwd`

( cd "$BUILD_MKOUT_ROOT/$TYPE" && make DESTDIR="$DESTDIR" install )

find "$IMAGE/install" -name '*.la' | while read_line
do
    rewrite_la "$LINE"
done
