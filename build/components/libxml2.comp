#!/bin/sh

#
# libxml2.comp -- see ../../helper.sh for how this file works.
#

COMP_INCREMENTAL=1
COMP_VERSION="2.6.29"
COMP_RELEASE="2"
COMP_SOURCES="${BUILD_ROOT}/src/linux/libxml2"
COMP_DEPENDENCIES="autoconf automake libtool"

function component_bootstrap
{
    cd "${COMP_SOURCES}" && autoreconf -fi
    exit_on_error $?
}

function component_gather
{
    echo "Nothing to gather for ${COMP_NAME}"
}

function _setup_build_env
{
    set_compiler_env

    cd ${BUILDING_ROOT}

    CFLAGS="${_cflags} -fPIC"
    DEFINES=
    CFLAGS="$CFLAGS $DEFINES"
    CPPFLAGS="$DEFINES"
    LDFLAGS="${_ldflags}"

    if [ "${BUILD_OS_TYPE}" = "aix" ]; then
	CC="$(echo $CC | sed 's/^gcc/gcc-wrap.sh/')"
	LDFLAGS="-Wl,-brtl"
    fi

    export DEFINES CFLAGS CPPFLAGS LDFLAGS CC
}

function component_configure
{
    _setup_build_env

    "${COMP_SOURCES}/configure" \
        CC="${CC}" \
        CFLAGS="${CFLAGS}" \
        CPPFLAGS="${CPPFLAGS}" \
	LDFLAGS="${LDFLAGS}" \
	--prefix=${PREFIX_DIR} \
	--exec-prefix=${PREFIX_DIR} \
	--libdir=${PREFIX_DIR}/${_lib} \
        --with-iconv=no \
        --with-zlib=no \
	--with-http=no \
	--with-ftp=no \
	--enable-ipv6=no \
        ${DEPENDENCY_TRACKING}
}

function component_build
{
    _setup_build_env

    ${MAKE} ${_mflags}
}

function component_stage
{
    _setup_build_env

    ${MAKE} DESTDIR=${STAGING_ROOT} install

    rm -rf ${STAGING_PREFIX_DIR}/{bin,share}
    rm -rf ${STAGING_PREFIX_DIR}/${_lib}/pkgconfig
    rm -f ${STAGING_PREFIX_DIR}/${_lib}/xml2Conf.sh

    mv ${STAGING_PREFIX_DIR}/include/libxml2/libxml ${STAGING_PREFIX_DIR}/include
    rmdir ${STAGING_PREFIX_DIR}/include/libxml2
    x_cp 0644 "${COMP_SOURCES}/libxml.h" ${STAGING_PREFIX_DIR}/include/.

    libtool_rewrite_staging
}

function component_populate
{
    COMP_NAME=libxml2
    COMP_PREFIX_DIR=`get_comp_staging_prefix_dir ${COMP_NAME}`
    COMP_ROOT_DIR=`get_comp_staging_root_dir ${COMP_NAME}`

    mkdir -p ${POPULATE_PREFIX_DIR}
    rsync -a --exclude "*.h" ${COMP_PREFIX_DIR}/ ${POPULATE_PREFIX_DIR}/

    
}
