#!/bin/bash -c "exit 1"

COMP_INCREMENTAL=1
COMP_SOURCES=${BUILD_ROOT}/src/linux/passwd
COMP_DEPENDENCIES="lsass"

function component_bootstrap
{
    cd "${COMP_SOURCES}" && autoreconf -fi
    exit_on_error $?
}

function component_gather
{
    echo "Nothing to gather for ${COMP_NAME}"
}

function _setup_build_env
{
    set_compiler_env

    cd ${BUILDING_ROOT}
    exit_on_error $?

    CFLAGS="${_cflags} -D_REENTRANT -fPIC"
    LDSHFLAGS="${_ldshflags}"
    LDFLAGS="${_ldflags}"
    CPPFLAGS="${_cppflags} ${CPPFLAGS}"

    export LDFLAGS CFLAGS LDSHFLAGS CPPFLAGS

    libtool_set_staging_library_path
    libtool_set_staging_path
}

function component_configure
{
    _setup_build_env

    "${COMP_SOURCES}/configure" --prefix=${PREFIX_DIR} ${DEPENDENCY_TRACKING} \
	LDFLAGS="$(libtool_staging_ldflags) $LDFLAGS"  \
	CPPFLAGS="$(libtool_staging_cppflags) $CPPFLAGS"
}

function component_build
{
   _setup_build_env

   ${MAKE} ${_mflags} all
}

function component_stage
{
    _setup_build_env

    ${MAKE} install \
	prefix=${STAGING_PREFIX_DIR} \
	exec_prefix=${STAGING_PREFIX_DIR} \
	bindir=${STAGING_PREFIX_DIR}/bin \
	sbindir=${STAGING_PREFIX_DIR}/sbin
}

function component_populate
{
    COMP_NAME=passwd
    COMP_PREFIX_DIR=`get_comp_staging_prefix_dir ${COMP_NAME}`
    COMP_ROOT_DIR=`get_comp_staging_root_dir ${COMP_NAME}`

    mkdir -p ${POPULATE_PREFIX_DIR}
    rsync -a ${COMP_PREFIX_DIR}/ ${POPULATE_PREFIX_DIR}/
}
