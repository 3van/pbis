#!/bin/bash

COMP_NEED_COMPAT=1
COMP_NEED_FOREIGN=1
COMP_INCREMENTAL=1
COMP_DEPENDENCIES="autoconf lwbase lwmsg sqlite lwbase"
COMP_SOURCES=${BUILD_ROOT}/src/linux/lwreg

function component_bootstrap
{
    cd "${COMP_SOURCES}" && ./autogen.sh
    exit_on_error $?
}

function component_gather
{
    echo "Nothing to gather for ${COMP_NAME}"
}

function _setup_build_env
{
    set_compiler_env

    cd ${BUILDING_ROOT}
    exit_on_error $?

    CFLAGS="${_cflags}"
    LDFLAGS="${_ldflags} $(libtool_staging_ldflags)"
    CPPFLAGS="${_cppflags} $(libtool_staging_cppflags)"

    export PATH CPPFLAGS LDFLAGS CFLAGS CC

    libtool_set_staging_library_path
    libtool_set_staging_path
}

function component_configure
{
    local lwreg_version=""
    local build_version="${OFFICIAL_BUILD_NUMBER}"
    local enable_debug=""
    local enable_profiling=""
    local enable_compat=""

    _setup_build_env

    if [ -z "${build_version}" ]; then
       build_version="0"
    fi

    lwreg_version="`echo ${MAIN_VERSION} | sed 's/\..$//'`.${build_version}"


    if [ -n "${BUILD_DEBUG}" ]; then
       enable_debug="--enable-debug"
    fi

    if [ -n "${BUILD_PROFILING}" ]; then
       enable_profiling="--enable-profiling"
    fi

    if [ -n "${IS_COMPAT}" ]; then
       enable_compat="--enable-compat"
    fi

    cd "${BUILDING_ROOT}" &&
    "${COMP_SOURCES}/configure"                   \
    --prefix=${PREFIX_DIR}                        \
    --libdir=${PREFIX_DIR}/${_lib}                \
    --sysconfdir=${BUILD_SYSCONFDIR}              \
    --localstatedir=${BUILD_LOCALSTATEDIR}        \
    $enable_debug                                 \
    $enable_compat                                \
    ${DEPENDENCY_TRACKING}
}

function component_build
{
    _setup_build_env

    ${MAKE} ${_mflags} all
}

function component_stage
{
    _setup_build_env

    ${MAKE} DESTDIR=${STAGING_ROOT_DIR} install

    libtool_rewrite_staging
}

function component_populate
{
    COMP_NAME=lwreg
    COMP_PREFIX_DIR=`get_comp_staging_prefix_dir ${COMP_NAME}`
    COMP_ROOT_DIR=`get_comp_staging_root_dir ${COMP_NAME}`

    if [ -z "${IS_COMPAT}" -a -z "${IS_FOREIGN}" ]; then
        mkdir -p ${POPULATE_ROOT_DIR}
        rsync -a ${COMP_ROOT_DIR}/ ${POPULATE_ROOT_DIR}/

        # Handle init scripts
	local script=lwregd
	x_mkinit \
            "${BUILD_ROOT}/src/linux/config/${script}" \
            ${script} \
            01 01 \
            likewise.lwregd 18 09

        if [ "${BUILD_OS_TYPE}" = 'solaris' ]; then
            mkdir -p ${POPULATE_ROOT_DIR}/etc/likewise/svcs-solaris
            x_cp 0755 ${BUILD_ROOT}/src/linux/config/svcs-solaris/lwregd.xml ${POPULATE_ROOT_DIR}/etc/likewise/svcs-solaris/.
        fi
	
	if [ "${BUILD_OS_TYPE}" = 'darwin' ]; then
            mkdir -p ${POPULATE_ROOT_DIR}/etc/likewise/LaunchDaemons
            x_cp 0755 ${BUILD_ROOT}/src/linux/config/com.likewisesoftware.lwregd.plist ${POPULATE_ROOT_DIR}/etc/likewise/LaunchDaemons/.
	fi
    else
        mkdir -p ${POPULATE_PREFIX_DIR}/${_lib}
        rsync -a ${COMP_PREFIX_DIR}/${_lib}/  ${POPULATE_PREFIX_DIR}/${_lib}/
    fi

    libtool_rewrite_populate
}
