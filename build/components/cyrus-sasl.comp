#!/bin/sh

COMP_VERSION="2.1.23"
COMP_RELEASE="0"
COMP_DEPENDENCIES="autoconf libtool pkg-config krb5"
COMP_SOURCES=${BUILD_ROOT}/src/linux/cyrus-sasl

function component_bootstrap
{
    cd "${COMP_SOURCES}" && ./autogen.sh
    exit_on_error $?
}

function component_gather
{
    echo "Nothing to gather for cyrus-sasl"
}

function _setup_build_env
{
    set_compiler_env

    cd ${BUILDING_ROOT}

    CFLAGS="${_cflags} -D_GNU_SOURCE -D_REENTRANT -fPIC -DLDAP_CONNECTIONLESS -Wimplicit-function-declaration"
    LDFLAGS="${_ldflags} $(libtool_format_rpath ${PREFIX_DIR}/${_lib})"

    export CFLAGS LDFLAGS
}

function component_configure
{
    _setup_build_env

    extra_flags=""

    if [ -n "${BUILD_MINIMAL}" ]
    then
	extra_flags="--disable-syslog --disable-debug --disable-proctitle --disable-local"
	CPPFLAGS="$CPPFLAGS -DFD_SETSIZE=32"
    fi
    if [ -n "${IS_COMPAT}" ]; then
        extra_flags="${extra_flags}"" --enable-includes-only"
    fi

    "${COMP_SOURCES}/configure" \
        --prefix=${PREFIX_DIR} \
        --libdir=${PREFIX_DIR}/${_lib} \
        --with-configdir=${PREFIX_DIR}/${_lib}/sasl2 \
        --with-plugindir=${PREFIX_DIR}/${_lib}/sasl2 \
        --without-dblib \
        --without-saslauthd \
        --without-authdaemond \
        --disable-macos-framework \
        --disable-sample \
        --disable-cram \
        --disable-digest \
        --disable-otp \
        --disable-plain \
        --disable-anon \
        --enable-gss_mutexes \
        --disable-static \
        --enable-shared \
	${extra_flags} \
        ${DEPENDENCY_TRACKING} \
	CPPFLAGS="$(libtool_staging_cppflags) $CPPFLAGS" \
	LDFLAGS="$(libtool_staging_ldflags) $LDFLAGS"
}

function component_build
{
    _setup_build_env

    ${MAKE} ${_mflags}
}

function component_stage
{
    _setup_build_env

    ${MAKE} DESTDIR=${STAGING_ROOT_DIR} install

    # Remove unused files
    rm -rf ${STAGING_PREFIX_DIR}/{share,etc,bin.delete,man,sbin}

    # Fixup permissions on header files.
    find ${STAGING_PREFIX_DIR}/include -type d | xargs chmod 755
    find ${STAGING_PREFIX_DIR}/include -type f | xargs chmod 644

    if [ -d "${STAGING_PREFIX_DIR}/${_lib}" ]; then
        # Fixup strange shared library permissions.
        chmod 755 ${STAGING_PREFIX_DIR}/${_lib}/lib*
    fi
    if [ -d "${STAGING_PREFIX_DIR}/${_lib}/sasl2" ]; then
        # Fixup strange shared library permissions.
        chmod 755 ${STAGING_PREFIX_DIR}/${_lib}/sasl2/lib*
    fi

    libtool_rewrite_staging
}

# function component_strip
# {
#     # Strip binaries
#     x_strip ${STAGING_PREFIX_DIR}/${_lib}/*.so*
# }
#!/bin/bash

function component_populate
{
    COMP_NAME=cyrus-sasl
    COMP_PREFIX_DIR=`get_comp_staging_prefix_dir ${COMP_NAME}`
    COMP_ROOT_DIR=`get_comp_staging_root_dir ${COMP_NAME}`

    if [ -z "${IS_COMPAT}" ]; then
	mkdir -p ${POPULATE_PREFIX_DIR}
	rsync -a ${COMP_PREFIX_DIR}/ ${POPULATE_PREFIX_DIR}/
    else
	mkdir -p ${POPULATE_PREFIX_DIR}/${_lib}
	rsync -a ${COMP_PREFIX_DIR}/${_lib}/ ${POPULATE_PREFIX_DIR}/${_lib}/
    fi

    libtool_rewrite_populate
}
