#!/bin/sh

COMP_INCREMENTAL=1
COMP_DEPENDENCIES="autoconf automake libtool openldap pstore lwmsg lwbase libuuid lwadvapi lwreg"
COMP_SOURCES=${BUILD_ROOT}/src/linux/netlogon

function component_bootstrap
{
    cd "${COMP_SOURCES}" && ./autogen.sh
    exit_on_error $?
}

function component_gather
{
    echo "Nothing to gather for ${COMP_NAME}"
}

function _setup_build_env
{
    set_compiler_env

    cd ${BUILDING_ROOT}/.
    exit_on_error $?

    # We need no-strict aliasing if we get optimized builds
    CFLAGS="${_cflags}"
    CPPFLAGS="${_cppflags}"
    LDFLAGS="${_ldflags}"

    case "${BUILD_OS_TYPE}" in
        hpux)
            CFLAGS="$CFLAGS -D_XOPEN_SOURCE_EXTENDED"
            ;;
        aix)
            CFLAGS="$CFLAGS -D_THREAD_SAFE"
            ;;
    esac

    export PATH CPPFLAGS LDFLAGS CFLAGS LDSHFLAGS CC
}

function component_configure
{
    local extra_flags=""

    _setup_build_env

    if [ -n "${BUILD_DEBUG}" ]; then
       extra_flags="$extra_flags --enable-debug"
    fi

    if [ -n "${BUILD_MINIMAL}" ]
    then
        extra_flags="$extra_flags --disable-pidfile"
    fi

    "${COMP_SOURCES}/configure"                       \
	--prefix=${PREFIX_DIR}                        \
        --libdir=${PREFIX_DIR}/${_lib}                \
        --sysconfdir=${BUILD_SYSCONFDIR}              \
        --localstatedir=${BUILD_LOCALSTATEDIR}        \
        $extra_flags                                  \
        ${DEPENDENCY_TRACKING}                        \
	LDFLAGS="$(libtool_staging_ldflags) $LDFLAGS" \
	CPPFLAGS="$(libtool_staging_cppflags) $CPPFLAGS"
}

function component_build
{
    _setup_build_env

    ${MAKE} ${_mflags} all
}

function component_stage
{
    _setup_build_env

    ${MAKE} DESTDIR=${STAGING_ROOT_DIR} install

    libtool_rewrite_staging
}

function component_populate
{
    COMP_NAME=netlogon
    COMP_PREFIX_DIR=`get_comp_staging_prefix_dir ${COMP_NAME}`
    COMP_ROOT_DIR=`get_comp_staging_root_dir ${COMP_NAME}`

    mkdir -p ${POPULATE_PREFIX_DIR}

    rsync -a --exclude lw-export-dc-cache ${COMP_ROOT_DIR}/ ${POPULATE_ROOT_DIR}/

    # Handle init scripts
    local script=netlogond
    x_mkinit \
	"${BUILD_ROOT}/src/linux/config/${script}" \
	${script} \
	01 01 \
	likewise.netlogond 19 09

    # Init script links
    case "${BUILD_OS_TYPE}-${BUILD_OS_ARCH}" in
        hpux-*)
            mkdir -p ${POPULATE_ROOT_DIR}/sbin/rc1.d/
            mkdir -p ${POPULATE_ROOT_DIR}/sbin/rc2.d/
            ln -s /sbin/init.d/${script} ${POPULATE_ROOT_DIR}/sbin/rc1.d/K394${script}
            ln -s /sbin/init.d/${script} ${POPULATE_ROOT_DIR}/sbin/rc2.d/S394${script}
            ;;
    esac

    if [ "${BUILD_OS_TYPE}" = 'solaris' ]; then
        mkdir -p ${POPULATE_ROOT_DIR}/etc/likewise/svcs-solaris
        x_cp 0755 ${BUILD_ROOT}/src/linux/config/svcs-solaris/netlogond.xml ${POPULATE_ROOT_DIR}/etc/likewise/svcs-solaris/.
    fi

    if [ "${BUILD_OS_TYPE}" = 'darwin' ]; then
        mkdir -p ${POPULATE_ROOT_DIR}/etc/likewise/LaunchDaemons
        x_cp 0755 ${BUILD_ROOT}/src/linux/config/com.likewisesoftware.netlogond.plist ${POPULATE_ROOT_DIR}/etc/likewise/LaunchDaemons/.
    fi

    x_cp 0644 \
	${BUILD_ROOT}/src/linux/config/likewise-krb5-ad.conf \
	${POPULATE_ROOT_DIR}/${BUILD_SYSCONFDIR}/likewise-krb5-ad.conf

    libtool_rewrite_populate
}
