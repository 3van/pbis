#!/bin/bash -c "exit 1"

COMP_DEPENDENCIES="autoconf automake libtool krb5 apache-${APACHE_COMP_VERSION}"
COMP_SOURCES=${BUILD_ROOT}/src/linux/mod_auth_kerb

function component_bootstrap
{
    echo "Nothing to bootstrap for ${COMP_NAME}"
}

function component_gather
{
    rsync -a --exclude=.svn ${BUILD_ROOT}/src/linux/mod_auth_kerb/ ${GATHER_DIR}
}

function _setup_build_env
{
    set_compiler_env

    cd ${BUILDING_ROOT}
    exit_on_error $?

    # We need no-strict aliasing if we get optimized builds
    CFLAGS="${_cflags}"
    LDSHFLAGS="${_ldshflags}"
    LDFLAGS="${_ldflags}"
    
    APACHE_DIRPATH=`get_staging_prefix_dir apache-${APACHE_COMP_VERSION}`
    KRB5_DIRPATH=`get_staging_prefix_dir krb5`
    KRB5_LIBDIR=${_lib}

    libtool_set_staging_library_path
    libtool_set_staging_path

    export PATH CPPFLAGS LDFLAGS CFLAGS LDSHFLAGS CC SHLIBEXT APACHE_DIRPATH KRB5_DIRPATH KRB5_LIBDIR
}

function component_configure
{
    _setup_build_env
    
    autoconf -f

    ./configure \
	LDFLAGS="$(libtool_staging_ldflags) ${LDFLAGS}" \
	--prefix=${PREFIX_DIR} \
	--with-apache=${APACHE_DIRPATH} \
	--with-krb5=${KRB5_DIRPATH} \
	--without-krb4
}

function component_build
{
    _setup_build_env

    ${MAKE} ${_mflags}
}

function component_stage
{
    _setup_build_env

    case "${BUILD_OS_TYPE}-${BUILD_OS_ARCH}" in
        hpux-hppa20)
            _SHLIB_EXT="sl"
            ;;
        *)
            _SHLIB_EXT="so"
            ;;
    esac


    APACHE_VERSION=`echo $APACHE_COMP_VERSION | sed -e 's/_/\./g'`
    mkdir -p ${STAGING_PREFIX_DIR}/apache/${APACHE_VERSION}

    if [ -f src/mod_auth_kerb.la ]; then
        libtool --mode=install --tag=CC \
            cp src/mod_auth_kerb.la ${STAGING_PREFIX_DIR}/apache/${APACHE_VERSION}/.
    else
        x_cp 0755 src/mod_auth_kerb.${_SHLIB_EXT} \
            ${STAGING_PREFIX_DIR}/apache/${APACHE_VERSION}/mod_auth_kerb.${_SHLIB_EXT}
    fi

    libtool_rewrite_staging
}

function component_populate
{
    COMP_NAME=mod-auth-kerb-${APACHE_COMP_VERSION}
    COMP_PREFIX_DIR=`get_comp_staging_prefix_dir ${COMP_NAME}`
    COMP_ROOT_DIR=`get_comp_staging_root_dir ${COMP_NAME}`

    mkdir -p ${POPULATE_PREFIX_DIR}
    rsync -a --exclude  "*.la" ${COMP_PREFIX_DIR}/ ${POPULATE_PREFIX_DIR}/

    libtool_rewrite_populate
}
