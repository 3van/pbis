#!/bin/sh

COMP_VERSION="1.2.5"
if [ "${BUILD_OS_TYPE}" = "solaris" ]; then
    COMP_VERSION="1.1.18"
fi
COMP_RELEASE="0"
#!/bin/bash -c "exit 1"

#
# mono.comp -- see ../../helper.sh for how this file works.
#

function component_gather
{
    local monoRoot=${BUILD_ROOT}/src/linux/mono-repackage/mono-${COMP_VERSION}

    mkdir -p ${GATHER_DIR}/mono/noarch

    rsync -a --exclude=.svn \
	${monoRoot}//noarch/ \
	${GATHER_DIR}/mono/noarch/

    if [ -d ${monoRoot}/${BUILD_OS_TYPE}/noarch/ ]; then
	rsync -a --exclude=.svn \
	    ${monoRoot}/${BUILD_OS_TYPE}/noarch/ \
	    ${GATHER_DIR}/mono/noarch/
    fi

    mkdir -p ${GATHER_DIR}/mono/${BUILD_OS_ARCH}
    rsync -a --exclude=.svn \
	${monoRoot}/${BUILD_OS_TYPE}/${BUILD_OS_ARCH}/ \
	${GATHER_DIR}/mono/${BUILD_OS_ARCH}/
}

function component_configure
{
    echo > /dev/null
}

function component_build
{
    echo > /dev/null
}

function component_stage
{
    #
    # Note that 64-bit Mono does not like lib64.  It really wants lib.
    #

    mkdir -p ${STAGING_PREFIX_DIR}/mono/{bin,etc}
    mkdir -p ${STAGING_PREFIX_DIR}/mono/lib/mono

    cp -rpd mono/noarch/etc/* ${STAGING_PREFIX_DIR}/mono/etc/.
    cp -rpd mono/noarch/lib/mono/* ${STAGING_PREFIX_DIR}/mono/lib/mono/.
    cp -pd mono/${BUILD_OS_ARCH}/bin/* ${STAGING_PREFIX_DIR}/mono/bin/.
    cp -pd mono/${BUILD_OS_ARCH}/lib/* ${STAGING_PREFIX_DIR}/mono/lib/.
}
#!/bin/bash

function component_populate
{
    COMP_NAME=mono
    COMP_PREFIX_DIR=`get_comp_staging_prefix_dir ${COMP_NAME}`
    COMP_ROOT_DIR=`get_comp_staging_root_dir ${COMP_NAME}`

    mkdir -p ${POPULATE_PREFIX_DIR}/mono
    rsync -a ${COMP_PREFIX_DIR}/mono/ ${POPULATE_PREFIX_DIR}/mono/
}
