#!/bin/sh

COMP_NEED_COMPAT=1
COMP_NEED_FOREIGN=1
COMP_DEPENDENCIES="autoconf automake libtool lwbase krb5 pstore openldap lwmsg"
COMP_SOURCES="${BUILD_ROOT}/src/linux/lwadvapi"
COMP_INCREMENTAL=1

function component_bootstrap
{
    cd "${COMP_SOURCES}" && ./autogen.sh
    exit_on_error $?
}

function component_gather
{
    echo "Nothing to gather for ${COMP_NAME}"
}

function _setup_build_env
{
    set_compiler_env

    cd ${BUILDING_ROOT}/.
    exit_on_error $?

    CPPFLAGS="$(libtool_staging_cppflags) ${_cppflags}"
    CFLAGS="${_cflags}"
    LDFLAGS="$(libtool_staging_ldflags) ${_ldflags}"

    export PATH CPPFLAGS LDFLAGS CFLAGS CC
}

function component_configure
{
    _setup_build_env
    local extra_flags=""

    if [ -n "${IS_COMPAT}" ]
    then
	extra_flags="$extra_flags --enable-compat"
    fi

    "${COMP_SOURCES}/configure"        \
	--prefix=${PREFIX_DIR}         \
        --libdir=${PREFIX_DIR}/${_lib} \
	${extra_flags}                 \
        ${DEPENDENCY_TRACKING}
}

function component_build
{
    _setup_build_env

    ${MAKE} ${_mflags} all
}

function component_stage
{
    _setup_build_env

    ${MAKE} DESTDIR=${STAGING_ROOT_DIR} install

    libtool_rewrite_staging
}

function component_populate
{
    COMP_NAME=lwadvapi
    COMP_PREFIX_DIR=`get_comp_staging_prefix_dir ${COMP_NAME}`
    COMP_ROOT_DIR=`get_comp_staging_root_dir ${COMP_NAME}`

    mkdir -p ${POPULATE_ROOT_DIR}
    rsync -a ${COMP_ROOT_DIR}/ ${POPULATE_ROOT_DIR}/

    libtool_rewrite_populate
}
