#!/bin/bash

COMP_INCREMENTAL=1
COMP_DEPENDENCIES="autoconf automake libtool netlogon lsass lwbase lwio grouppolicy lwadvapi"
COMP_SOURCES=${BUILD_ROOT}/src/linux/macadutil

function component_bootstrap
{
    echo "Nothing to bootstrap for ${COMP_NAME}"
}

function component_gather
{
    rsync -a --exclude=.svn ${BUILD_ROOT}/src/linux/macadutil/ ${GATHER_DIR}/
}

function _setup_build_env
{
    set_compiler_env

    cd ${BUILDING_ROOT}/.
    exit_on_error $?

    CFLAGS="${_cflags}"
    LDFLAGS="${_ldflags}"
    CPPFLAGS="${_cppflags}"

    export PATH CPPFLAGS LDFLAGS CFLAGS CC
}

function component_configure
{
    local enable_debug=""
    local enable_compat=""

    _setup_build_env

    ./autogen.sh
    exit_on_error $?

    if [ -n "${BUILD_DEBUG}" ]; then
       enable_debug="--enable-debug"
    fi

    if [ -n "${IS_COMPAT}" ]; then
	enable_compat="--enable-compat"
    fi

    ./configure                                        \
	--prefix=${PREFIX_DIR}                         \
        --libdir=${PREFIX_DIR}/${_lib}                 \
	--sysconfdir=${BUILD_SYSCONFDIR}               \
	--localstatedir=${BUILD_LOCALSTATEDIR}         \
        $enable_debug                                  \
	$enable_compat                                 \
        ${DEPENDENCY_TRACKING}                         \
	LDFLAGS="$(libtool_staging_ldflags) $LDFLAGS"  \
	CPPFLAGS="$(libtool_staging_cppflags) $CPPFLAGS"
}

function component_build
{
    _setup_build_env

    ${MAKE} ${_mflags} all
}

function component_stage
{
    _setup_build_env

    ${MAKE} DESTDIR=${STAGING_ROOT_DIR} install

    libtool_rewrite_staging
}

function component_populate
{
    COMP_NAME=macadutil
    COMP_PREFIX_DIR=`get_comp_staging_prefix_dir ${COMP_NAME}`
    COMP_ROOT_DIR=`get_comp_staging_root_dir ${COMP_NAME}`

    mkdir -p ${POPULATE_PREFIX_DIR}

    rsync -a ${COMP_ROOT_DIR}/ ${POPULATE_ROOT_DIR}/
    
    libtool_rewrite_populate
}
