/**
 *
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * Purpose:	Likewise authentication configuration
 *
 * $Id: inst_doit.ycp 47566 2008-05-15 11:15:20Z locilka $
 */
{
textdomain "likewise";

import "Wizard";
import "Label";
import "GetInstArgs";
import "Report";
import "Likewise";
import "Popup";

map argmap = GetInstArgs::argmap();

//Wizard::CreateDialog(); // to be removed in final version

term contents = `HBox (`HStretch(), `VBox (
    `VStretch(),
    `Left (`Label (_("Enter the fully qualified name of your Active Directory domain (e.g. corp.yourcompany.com), along with the credentials of a user able to create computer accounts. For some networks, only administrators can create computer accounts, while on other networks any user may do so."))),
    `VSpacing (1),
    `InputField (`id (`domain), `opt (`hstretch), _("&Domain Name"), Likewise::domain),
    `VSpacing (1),
    `InputField (`id (`user), `opt (`hstretch),_("&User Name"), Likewise::user),
    `VSpacing (1),
    `Password (`id(`pass), `opt (`hstretch), _("&Password"), Likewise::pass),
    `VStretch()
), `HStretch ());

string help = _("Specify the domain to join this computer to");

Wizard::SetContents(_("Join Active Directory"), contents, help, argmap["enable_back"]:true , argmap["enable_next"]:true);

symbol ret = nil;

SCR::Execute (.target.bash_output, "/etc/likewise/install.sh postinstall");

while (true) {
    ret = (symbol)UI::UserInput();
    if (ret == `back)
	break;
    if (ret == `abort) {
	if (Popup::ReallyAbort (false))
	    break;
    }
    if (ret == `next) {
	Likewise::domain = (string)UI::QueryWidget (`id (`domain), `Value);
	Likewise::user = (string)UI::QueryWidget (`id (`user), `Value);
	Likewise::pass = (string)UI::QueryWidget (`id (`pass), `Value);
	string cmdline = sformat ("/opt/likewise/bin/domainjoin-cli join %1 %2", Likewise::domain, Likewise::user);
	setenv("PASSWORD", Likewise::pass, true);
	map ret = (map)SCR::Execute (.target.bash_output, cmdline);
	y2milestone ("Command %1 returned %2", cmdline, ret);
	if (ret["exit"]:-1 != 0)
	{
	    if (! Popup::AnyQuestion (Popup::NoHeadline(), sformat (_("Setting authentication failed:\n%1"), ret["stdout"]:""),
		Label::RetryButton(), Label::IgnoreButton(), `focus_yes))
		break;
	}
	else
	    break;
    }
}

return ret;

}
