PKG_NEED_COMPAT=1
PKG_NEED_FOREIGN=1
PKG_DESC="Likewise Open"
PKG_COMPONENTS="lwbase lwadvapi centutils openssl libiconv libuuid lwmsg lwsm popt curl lsass lwdns krb5 cyrus-sasl openldap sqlite libxml2 libschannel dcerpc lwreg lwsm eventlog netlogon lwio lwnetapi srvsvc domainjoin lwtools lwupgrade lwconfig reapsysl samba-interop"

MODAUTHKERB="mod-auth-kerb-2_0 mod-auth-kerb-2_2"

case "${BUILD_OS_TYPE}" in
    aix)
        PKG_COMPONENTS="$PKG_COMPONENTS passwd"
        ;;

    darwin)
        UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
        case "$UNAME_RELEASE" in
            8.*)
                PKG_COMPONENTS="$PKG_COMPONENTS domainjoin-mac $MODAUTHKERB"
                ;;
            9.*)
                PKG_COMPONENTS="$PKG_COMPONENTS domainjoin-mac $MODAUTHKERB"
                ;;
            10.*)
                PKG_COMPONENTS="$PKG_COMPONENTS domainjoin-mac"
                ;;
        esac
        ;;

    freebsd)
        PKG_COMPONENTS="$PKG_COMPONENTS passwd $MODAUTHKERB"
        ;;

    hpux)
        PKG_COMPONENTS="$PKG_COMPONENTS passwd"
        case "${BUILD_OS_ARCH}" in
            ia64)
                ;;
            hppa20)
                ;;
        esac
        ;;

    linux)
        PKG_COMPONENTS="$PKG_COMPONENTS passwd libfuse $MODAUTHKERB"
        ;;

    solaris)
        PKG_COMPONENTS="$PKG_COMPONENTS passwd $MODAUTHKERB"
        case "${BUILD_OS_ARCH}" in
            i386)
#                if [ "`uname -r`" = "5.10" ]; then
#                else
#                fi
                ;;
            sparc)
                ;;
        esac
        ;;
    source)
        PKG_COMPONENTS="$PKG_COMPONENTS passwd $MODAUTHKERB"
esac

function package_populate
{
    populate_components

    if [ "${BUILD_OS_TYPE}" = "linux" -a "${PKG_TYPE}" = "deb" ]
    then
        if [ -z "${IS_FOREIGN}" -a -z "${IS_COMPAT}" ]
        then
            mkdir -p "${POPULATE_PREFIX_DIR}/share"
            rsync -a "${BUILD_ROOT}/src/linux/config/likewise.pam-auth-update" "${POPULATE_PREFIX_DIR}/share/."
        fi
    fi

    if [ "${BUILD_OS_TYPE}" = "darwin" ]
    then
        mkdir -p "${POPULATE_PREFIX_DIR}/bin"
        rsync -a "${BUILD_ROOT}/src/linux/config/macuninstall.sh" "${POPULATE_PREFIX_DIR}/bin/."
        populate_component domainjoin-mac
    fi

    # Install generic init script routines
    mkdir -p "${POPULATE_PREFIX_DIR}/bin"
    rsync -a "${BUILD_ROOT}/src/linux/config/init-base.sh" "${POPULATE_PREFIX_DIR}/bin/."
    rsync -a "${BUILD_ROOT}/src/linux/config/init-lwsm.sh" "${POPULATE_PREFIX_DIR}/bin/."
    rsync -a "${BUILD_ROOT}/src/linux/config/init-likewise.sh" "${POPULATE_PREFIX_DIR}/bin/."

    if [ "${BUILD_OS_TYPE}" = "aix" ]
    then
        mkdir -p "${POPULATE_ROOT_DIR}/var/lock/subsys"
        mkdir -p "${POPULATE_ROOT_DIR}/var/run"
    fi

    strip_common
}
