/*
 * Copyright (C) Centeris Corporation 2004-2007
 * Copyright (C) Likewise Software 2007
 * All rights reserved.
 *
 * Authors: Krishna Ganugapati (krishnag@likewisesoftware.com)
 *          Sriram Nambakam (snambakam@likewisesoftware.com)
 *
 * LWMGMT IDL
 *
 */
#ifndef __LSAMGR_IDL__
#define __LSAMGR_IDL__

[
    uuid(06320c8a-642a-11dd-8dab-000c2243de47),
    pointer_default(unique),
    version(1.0)
]
interface lsamgr { 

    cpp_quote("#ifndef __LSAMGR_IDL__")
    cpp_quote("#define __LSAMGR_IDL__")
    
    cpp_quote("#ifndef LSAMETRICPACK_0_DEFINED")
    cpp_quote("#define LSAMETRICPACK_0_DEFINED 1")
    typedef struct _LSAMETRICPACK_0
    {
        hyper failedAuthentications;
        hyper failedUserLookupsByName;
        hyper failedUserLookupsById;
        hyper failedGroupLookupsByName;
        hyper failedGroupLookupsById;
        hyper failedOpenSession;
        hyper failedCloseSession;
        hyper failedChangePassword;
        hyper unauthorizedAccesses;

    } LSAMETRICPACK_0;
    cpp_quote("#endif")

    cpp_quote("#ifndef LSAMETRICPACK_1_DEFINED")
    cpp_quote("#define LSAMETRICPACK_1_DEFINED 1")
    typedef struct _LSAMETRICPACK_1
    {
        hyper successfulAuthentications;
        hyper failedAuthentications;
        hyper rootUserAuthentications;
        hyper successfulUserLookupsByName;
        hyper failedUserLookupsByName;
        hyper successfulUserLookupsById;
        hyper failedUserLookupsById;
        hyper successfulGroupLookupsByName;
        hyper failedGroupLookupsByName;
        hyper successfulGroupLookupsById;
        hyper failedGroupLookupsById;
        hyper successfulOpenSession;
        hyper failedOpenSession;
        hyper successfulCloseSession;
        hyper failedCloseSession;
        hyper successfulChangePassword;
        hyper failedChangePassword;
        hyper unauthorizedAccesses;

    } LSAMETRICPACK_1;
    cpp_quote("#endif")
    
    cpp_quote("#ifndef LWMGMTLSADCINFO_DEFINED")
    cpp_quote("#define LWMGMTLSADCINFO_DEFINED 1")
    typedef struct __LWMGMTLSADCINFO
    {
    	[unique, string] char * pszName;
    	[unique, string] char * pszAddress;
    	[unique, string] char * pszSiteName;
    	unsigned32              dwFlags;
    } LWMGMTLSADCINFO;
    cpp_quote("#endif")
    
    cpp_quote("#ifndef LWMGMTLSADOMAININFO_DEFINED")
    cpp_quote("#define LWMGMTLSADOMAININFO_DEFINED 1")
    typedef struct __LWMGMTLSADOMAININFO
    {
    	[unique, string] char * pszDnsDomain;
    	[unique, string] char * pszNetbiosDomain;
    	[unique, string] char * pszTrusteeDnsDomain;
    	[unique, string] char * pszDomainSID;
    	[unique, string] char * pszDomainGUID;
    	[unique, string] char * pszForestName;
    	[unique, string] char * pszClientSiteName;
    	unsigned32              dwTrustFlags;
    	unsigned32              dwTrustType;
    	unsigned32              dwTrustAttributes;
    	unsigned32              dwDomainFlags;
        LWMGMTLSADCINFO *       pDCInfo;
        LWMGMTLSADCINFO *       pGCInfo;
    } LWMGMTLSADOMAININFO;
    cpp_quote("#endif")
    
    cpp_quote("#ifndef LWMGMTLSAAUTHPROVIDERSTATUS_DEFINED")
    cpp_quote("#define LWMGMTLSAAUTHPROVIDERSTATUS_DEFINED 1")
    typedef struct __LWMGMTLSAAUTHPROVIDERSTATUS
    {
		[unique, string] char * pszId;
    	unsigned short int      mode;
        unsigned short int      subMode;
        unsigned short int      status;
        [unique, string] char * pszDomain;
        [unique, string] char * pszForest;
        [unique, string] char * pszSite;
        [unique, string] char * pszCell;
        unsigned32              dwNetworkCheckInterval;
        unsigned32              dwNumTrustedDomains;
        [size_is(dwNumTrustedDomains)] LWMGMTLSADOMAININFO* pTrustedDomainInfoArray;
    } LWMGMTLSAAUTHPROVIDERSTATUS;
    cpp_quote("#endif")
    
    cpp_quote("#ifndef LWMGMTLSAVERSION_DEFINED")
    cpp_quote("#define LWMGMTLSAVERSION_DEFINED 1")
    typedef struct __LWMGMTLSAVERSION
    {
        unsigned32 major;
        unsigned32 minor;
        unsigned32 build;
    } LWMGMTLSAVERSION;
    cpp_quote("#endif")
    
    cpp_quote("#ifndef LWMGMTLSASTATUS_DEFINED")
    cpp_quote("#define LWMGMTLSASTATUS_DEFINED 1")
    typedef struct __LWMGMTLSASTATUS
    {
        LWMGMTLSAVERSION agentVersion;
    	unsigned32       uptime;
    	unsigned32       count;
    	[size_is(count)] LWMGMTLSAAUTHPROVIDERSTATUS* pAuthProviderStatusArray;
    } LWMGMTLSASTATUS;
    cpp_quote("#endif")

    cpp_quote("#ifndef LSAMETRICPACK_DEFINED")
    cpp_quote("#define LSAMETRICPACK_DEFINED 1")
    typedef [switch_type(unsigned short int)] union __LSAMETRICPACK {
        [case(0)] LSAMETRICPACK_0 pack0;
        [case(1)] LSAMETRICPACK_1 pack1;
    } LSAMETRICPACK;
    cpp_quote("#endif")

    long
    RpcLWMgmtEnumPerformanceMetrics(
    	[in]  unsigned short int infoLevel,
    	[out,ref,switch_is(infoLevel)] LSAMETRICPACK* pMetricPack
	);
	
	long
	RpcLWMgmtGetStatus(
	    [out,ref] LWMGMTLSASTATUS* pLsaStatus
	    );

	cpp_quote("#endif /* __LSAMGR_IDL__ */")
}

#endif /* __LSAMGR_IDL__ */

